CREATE DATABASE IF NOT EXISTS shopking;

USE shopking;

create table admins(
	admin_id int primary key,
    password varchar(256)
);

create table category(
	cat_ID int primary key,
    name varchar(256) Unique NOT NULL,
    descr varchar(256) NOT NULL
);

create table customers(	
	customer_ID int primary key auto_increment,
    name varchar(256) NOT NULL,
    email varchar(256) unique,
    login_ID varchar(256) NOT NULL,
    password varchar(256) NOT NULL,
    sector varchar(256) NOT NULL,
    city varchar(256) NOT NULL,
    state varchar(256) NOT NULL,
    pincode int NOT NULL default 0,
    phone int check(1000000000<=phone<=9999999999) NOT NULL default 100000000
);
    
create table products(
	prod_ID int primary key,
    name varchar(256) NOT NULL,
    description varchar(256) ,
    price decimal(10,2) NOT NULL,
    stock_quantity int NOT NULL,
    category_ID int NOT NULL,
    foreign key (category_ID) references category(cat_ID)
);

create table cart(
	cart_ID int primary key ,
    total_price decimal(10,2),
    prod_ID int NOT NULL,
    customer_ID int NOT NULL,
    order_ID int NOT NULL,
    foreign key (prod_ID) references products(prod_ID),
    foreign key (customer_ID) references customers(customer_ID)
    );

create table supplier(
	supp_ID int primary key ,
    name varchar(256) NOT NULL,
    sector varchar(256) NOT NULL,
    city varchar(256) NOT NULL,
    state varchar(256) NOT NULL,
    pincode int NOT NULL,
    admin_id int NOT NULL,
    phone int check(10000000000<=phone<=9999999999) NOT NULL
);





create table del_partners(
	dp_ID int primary key ,
    password int NOT NULL,
    name varchar(256) NOT NULL,
    livelocation varchar(256) NOT NULL,
    rating int check(1<=rating<=5) default 3,
    admin_id int NOT NULL,
    foreign key (admin_id) references admins(admin_id)
);

  

create table orders(
	order_ID int primary key NOT NULL,
    order_time datetime NOT NULL,
    delivery_time datetime NOT NULL,
    Status varchar(266) NOT NULL,
    customer_ID int NOT NULL,
    admin_ID int NOT NULL,
    dp_ID int ,
	payment_ID int unique,
    payment_time  datetime NOT NULL,
    foreign key (customer_ID) references customers(customer_ID),
    foreign key (admin_ID) references admins(admin_ID),
    foreign key (dp_ID) references del_partners(dp_ID)
);


create table delivers(
	customer_ID int,
    dp_ID int,
	foreign key (dp_ID) references del_partners(dp_ID),
    foreign key (customer_ID) references customers(customer_ID)
);

create table handles(
	dp_ID int,
    order_ID int,
	foreign key (dp_ID) references del_partners(dp_ID),
	foreign key (order_ID) references orders(order_ID)
);

create table supplies(
	SUPP_ID int,
    dp_ID int,
	foreign key (dp_ID) references del_partners(dp_ID)
    );

create table pack(
	order_ID int,
    DP_ID int,
	foreign key (dp_ID) references del_partners(dp_ID),
    foreign key (order_ID) references orders(order_ID)
);

create table owns(
	supp_ID int,
    prod_ID int,
    foreign key (supp_ID) references supplier(supp_ID),
    foreign key (prod_ID) references products(prod_ID)
    );

create table Contain(
	order_ID int,
    prod_ID int,
    foreign key (order_ID) references orders(order_ID),
    foreign key (prod_ID) references products(prod_ID)    
)


